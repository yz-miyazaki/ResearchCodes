----------------------------------------------
(C)Yuzo Miyazaki 2015
MAIL:miyazaki@utm.inf.uec.ac.jp
----------------------------------------------

■はじめに
・このGithubレポジトリ上のプログラム群は卒業研究に用いたものとなります．
・卒業研究の概要を述べたあと，各プログラムが研究のどの部分に当たるかの簡単な説明を載せています．


■謝辞
　　・計算に膨大な時間とマシンリソースを食うこと(xeon8コア並列,メモリ200Gb計算サーバーで半日程度)
　　・計算に用いるデータファイルがひとつ数Gbに及ぶものがいくつかあること
　　・院入学の際のデータ整理で紛失したコードがあること
　という理由でここにあるコード群だけでは動かす事はできなくなっております，すみません，了承下さい．
　こんなふうにプログラム組んでたんだなという参考になれば幸いです．


■卒業研究概要
・「意味空間モデルを用いた複合名詞句の有意味性計算」を行いました．

①意味空間
　単語を高次元空間上の点とみなし，一般には200-300次元のベクトルとして表現するモデルです．この単語をそれぞれ行ベクトルとすると，多くの単語を列に並べると単語の次元×単語数の行列ができます．こうして作られた行列を意味空間といいます．意味空間はコーパスの単語の分布統計情報から自動的に生成することができます．また，応用としては意味空間モデルではベクトル同士の角度を測ることで単語と単語の類似度を計算することが出来ます．
　意味空間は以下の3手順で構築されます．
　　(1)単語・文脈行列の作成
　　(2)(tf-idfによる)重み付け
　　(3)特異値分解による次元圧縮

②複合名詞句（以下複合句）のベクトル表現
　意味空間上の単語ベクトル同士を合成し，複合句のベクトル表現を得ます．アルゴリズムは先行研究を参考にDilationアルゴリズムを用いました．一般の意味空間では例えば「漢字」などが一つのベクトル表現を持ちますが，ここでは「漢字検定」などの複合句がそれぞれベクトル表現を持っていると考えて下さい．

③有意味性計算
　上述で得られた単語の意味空間と複合句の意味空間を用いて複合句の有意味性を計算します．「単語は明白に有意味なため，それと類似する複合句も有意味である」という考えのもとで，ある複合句と意味空間上の各単語との類似度を計算し，その類似度をもとにいくつかの手法で有意味性を算出し，過去の研究で得られた複合句の有意味性の評定実験結果と比較することで手法の評価をします．

・各プログラムは上記の文脈のもとで作成されています．


■注意事項
・計算量が大きいため，多くのプログラムは長時間サーバーにタスクを解き続けてもらう事を前提に組んでいます．
・計算量が大きいプログラムはそれぞれあらかじめコメントでその旨を再掲しますので，もし実行の際は注意して下さい．


■動作環境
「python(2.6.6以降の2.系)」，「redsvd」(特異値分解ライブラリ，https://code.google.com/archive/p/redsvd/)，「R」が必要です．
またpythonライブラリとして「numpy」,「scipy」,「matplotlib」,「beautifulsoup(xmlパーサーライブラリ)」が必要です．
pythonコードは「CentOS6.5」での動作を確認しています(python2.6.6)．
redsvd，Rは「lubuntu」での動作を確認しています．
(※redsvdはCentOSではインストール出来ないことが多いです，ご注意下さい．)


■概要
・本プログラム群ではコーパスから単語ベクトルの算出，複合句のベクトル表現の算出，複合句の有意味性計算，また算出された複合句の評価までを行います．


■プログラムのフロー
・上述の3ステップ毎に用いるコード群を以下に示します．
・またプログラムのフローは上から下に順に進めていきます．

　　①意味空間の作成
　　・ xml2context.py          (xml形式のコーパスから以後のプロセスに適した形で文脈集合を取得)
　　→ makewordlist.py         (集めた文書集合で計10回以上出現単語リストの取得)
　　→ semspc_tfidf.py         (文脈集合と単語リストからtf-idfで重み付けを施した意味空間の生成)
　　→ redsvdによる特異値分解  (sem_spc_tfidfよりsemspc.S,U,Vが作成)
　　　　(※redsvdはShellコマンドラインで実行するためリポジトリには存在しません)
　　→ culc_multiUV.py         (redsvdで生成された.U行列（特異値）と.S行列の積で意味空間を生成)
　　
　　②複合句ベクトルの作成．
　　・dilation.py              (パラメータをコマンドライン引数で指定，dilationアルゴリズムを実行)

　　③有意味性算出，評価
　　・sims_comp_and_words.py   (各複合句に対し意味空間中の全単語との類似度を計算)
　　→diff_var_mean.py         (計算された類似度の他の類似度との差分，平均，分散を用いて有意味性の計算
　　　　　　　　　　　　　　　　また人手で収集された評定データとの相関係数を計算し，手法の評価に用いる値の算出)



